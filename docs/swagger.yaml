openapi: 3.0.0
info:
  title: E-commerce Product API
  version: 1.0.0
  description: API for managing products in an e-commerce platform
paths:
  /products:
    get:
      summary: Get all products or filter by category
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter products by category (supports partial, case-insensitive matches)
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  message:
                    type: string
              example:
                data:
                  - id: 1
                    name: T-Shirt
                    price: 19.99
                    category: Apparel
                    description: Comfortable cotton t-shirt
                  - id: 2
                    name: Jeans
                    price: 49.99
                    category: Apparel
                    description: Slim fit blue jeans
                message: Products retrieved for category containing: App
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Product created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
                  message:
                    type: string
              example:
                data:
                  id: 4
                  name: New Shirt
                  price: 29.99
                  category: Apparel
                  description: Cotton blend shirt
                message: Product created successfully
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  errors:
                    type: array
                    items:
                      type: string
              example:
                error: Validation failed
                errors:
                  - Product name is required
                  - Price must be a positive number
  /products/{id}:
    get:
      summary: Get product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Product'
                  message:
                    type: string
              example:
                data:
                  id: 1
                  name: T-Shirt
                  price: 19.99
                  category: Apparel
                  description: Comfortable cotton t-shirt
                message: Product retrieved successfully
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: Product not found
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        category:
          type: string
        description:
          type: string
      required:
        - id
        - name
        - price
        - category
    ProductInput:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
        category:
          type: string
        description:
          type: string
      required:
        - name
        - price
        - category